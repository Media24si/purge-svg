import path from"path";import fs from"fs";import glob from"glob";var CONFIG_FILENAME="purgesvg.config.js",ERROR_CONFIG_FILE_LOADING="Error loading the config file",ERROR_OPTIONS_TYPE="Error Type Options: expected an object",ERROR_WHITELIST_TYPE="Error Type option whitelist: expected an array",ERROR_MISSING_CONTENT="No content provided.",ERROR_MISSING_SVGS="No svgs provided.",_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r},classCallCheck=function(r,t){if(!(r instanceof t))throw new TypeError("Cannot call a class as a function")},createClass=function(){function r(r,t){for(var e=0;e<t.length;e++){var o=t[e];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(r,o.key,o)}}return function(t,e,o){return e&&r(t.prototype,e),o&&r(t,o),t}}(),toConsumableArray=function(r){if(Array.isArray(r)){for(var t=0,e=Array(r.length);t<r.length;t++)e[t]=r[t];return e}return Array.from(r)},defaultOptions={content:[],svgs:[],whitelist:[]},PurgeSvg=function(){function r(t){classCallCheck(this,r),"string"!=typeof t&&void 0!==t||(t=r.loadConfigFile(t)),r.validateOptions(t),this.options=Object.assign(defaultOptions,t)}return createClass(r,null,[{key:"loadConfigFile",value:function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:CONFIG_FILENAME;try{return require(path.resolve(process.cwd(),r))}catch(r){throw new Error(ERROR_CONFIG_FILE_LOADING)}}},{key:"validateOptions",value:function(r){if("object"!==(void 0===r?"undefined":_typeof(r)))throw new TypeError(ERROR_OPTIONS_TYPE);if(!r.content||!r.content.length)throw new TypeError(ERROR_MISSING_CONTENT);if(!r.svgs||!r.svgs.length)throw new TypeError(ERROR_MISSING_SVGS);if(r.whitelist&&!Array.isArray(r.whitelist))throw new TypeError(ERROR_WHITELIST_TYPE)}},{key:"globPaths",value:function(r){"string"==typeof r&&(r=[r]);return r.map(function(r){return fs.existsSync(r)?[r]:[].concat(toConsumableArray(glob.sync(r,{nodir:!0})))}).reduce(function(r,t){return[].concat(toConsumableArray(r),toConsumableArray(t))},[]).filter(function(r,t,e){return e.indexOf(r)===t}).map(function(r){return path.resolve(process.cwd(),r)})}}]),r}();export default PurgeSvg;
